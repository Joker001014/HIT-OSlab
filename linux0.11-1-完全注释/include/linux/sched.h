#ifndef _SCHED_H
#define _SCHED_H

#define NR_TASKS 64		// ?????????????????????
#define HZ 100			// ?????????¦Ä????(1 ??????????¦Ä?10ms)

#define FIRST_TASK task[0]	// ????0 ??????????????????????????????????
#define LAST_TASK task[NR_TASKS-1]	// ?????????§Ö???????????

#include <linux/head.h>		// head ????????????????????????????????????????
#include <linux/fs.h>		// ????????????????????????file,buffer_head,m_inode ?????
#include <linux/mm.h>		// ????????????????????§³??????§»?????????????
#include <signal.h>		// ?????????????????????????????????????????????

#if (NR_OPEN > 32)
#error "Currently the close-on-exec-flags are in one word, max 32 files/proc"
#endif

// ??????????????§á??????????
#define TASK_RUNNING 0		// ???????????§Ý????????????
#define TASK_INTERRUPTIBLE 1	// ?????????§Ø???????
#define TASK_UNINTERRUPTIBLE 2	// ???????????§Ø??????????????I/O ?????????
#define TASK_ZOMBIE 3		// ??????????????????????§µ?????????????????
#define TASK_STOPPED 4		// ??????????

#ifndef NULL
#define NULL 0	// ????NULL ??????
#endif

// ????????????????Linus ????????????????????????( mm/memory.c, 105 )
extern int copy_page_tables (unsigned long from, unsigned long to, long size);
// ????????????????üŸ?????????( mm/memory.c, 150 )
extern int free_page_tables (unsigned long from, unsigned long size);

// ??????????????????( kernel/sched.c, 385 )
extern void sched_init (void);
// ????????????( kernel/sched.c, 104 )
extern void schedule (void);
// ??(????)?§Ø????????????????????§Ø????????????§Ø?????????( kernel/traps.c, 181 )
extern void trap_init (void);
// ???????????????????????????( kernel/panic.c, 16 )??
extern void panic (const char *str);
// ??tty ??§Õ???????????????( kernel/chr_drv/tty_io.c, 290 )??
extern int tty_write (unsigned minor, char *buf, int count);

typedef int (*fn_ptr) ();	// ???Žï??????????

// ?????????§¿???????????????????????????§Ý??i387 ????????????
struct i387_struct
{
	long cwd;			// ??????(Control word)??
	long swd;			// ????(Status word)??
	long twd;			// ?????(Tag word)??
	long fip;			// §¿?????????????
	long fcs;			// §¿??????????¦Ì??????
	long foo;
	long fos;
	long st_space[20];		/* 8*10 bytes for each FP-reg = 80 bytes */
};

// ????????????????¦Ì??§Ò???????????
struct tss_struct
{
	long back_link;		/* 16 high bits zero */
	long esp0;
	long ss0;			/* 16 high bits zero */
	long esp1;
	long ss1;			/* 16 high bits zero */
	long esp2;
	long ss2;			/* 16 high bits zero */
	long cr3;
	long eip;
	long eflags;
	long eax, ecx, edx, ebx;
	long esp;
	long ebp;
	long esi;
	long edi;
	long es;			/* 16 high bits zero */
	long cs;			/* 16 high bits zero */
	long ss;			/* 16 high bits zero */
	long ds;			/* 16 high bits zero */
	long fs;			/* 16 high bits zero */
	long gs;			/* 16 high bits zero */
	long ldt;			/* 16 high bits zero */
	long trace_bitmap;		/* bits: trace 0, bitmap 16-31 */
	struct i387_struct i387;
};

// ?????????????????????????????????????
// ==========================
// long state ?????????????-1 ???????§µ?0 ??????(????)??>0 ????????
// long counter ??????????????(???)???¦Ä?????????????????
// long priority ??????????????????????counter = priority??????????????
// long signal ??????¦Ë??????????¦Ë???????????????=¦Ë????+1??
// struct sigaction sigaction[32] ???????????????????????§Ö?????????????
// long blocked ???????????????????¦Ë?????
// --------------------------
// int exit_code ?????????????????Íè????????
// unsigned long start_code ????¦Å????
// unsigned long end_code ????????????????
// unsigned long end_data ?????? + ?????????????????
// unsigned long brk ???????????????
// unsigned long start_stack ????¦Å????
// long pid ????????(?????)??
// long father ????????
// long pgrp ??????????
// long session ?????
// long leader ??????
// unsigned short uid ????????????id????
// unsigned short euid ??§¹???id??
// unsigned short suid ????????id??
// unsigned short gid ?????????id????
// unsigned short egid ??§¹??id??
// unsigned short sgid ???????id??
// long alarm ???????????¦Ä???????
// long utime ????????????¦Ä???????
// long stime ???????????¦Ä???????
// long cutime ????????????????
// long cstime ???????????????
// long start_time ??????????????
// unsigned short used_math ?????????????§¿????????
// --------------------------
// int tty ???????tty ?????õô???-1 ????????¨¢?
// unsigned short umask ???????????????¦Ë??
// struct m_inode * pwd ?????????i ??????
// struct m_inode * root ????i ??????
// struct m_inode * executable ??????i ??????
// unsigned long close_on_exec ?????????????¦Ë?????????¦Ì?include/fcntl.h??
// struct file * filp[NR_OPEN] ?????????????????
// --------------------------
// struct desc_struct ldt[3] ???????????????????0-???1-?????cs??2-?????????ds&ss??
// --------------------------
// struct tss_struct tss ??????????????????????
// ==========================
struct task_struct
{
/* these are hardcoded - don't touch */
	long state;			/* -1 unrunnable, 0 runnable, >0 stopped */
	long counter;
	long priority;
	long signal;
	struct sigaction sigaction[32];
	long blocked;			/* bitmap of masked signals */
/* various fields */
	int exit_code;
	unsigned long start_code, end_code, end_data, brk, start_stack;
	long pid, father, pgrp, session, leader;
	unsigned short uid, euid, suid;
	unsigned short gid, egid, sgid;
	long alarm;
	long utime, stime, cutime, cstime, start_time;
	unsigned short used_math;
/* file system info */
	int tty;			/* -1 if no tty, so it must be signed */
	unsigned short umask;
	struct m_inode *pwd;
	struct m_inode *root;
	struct m_inode *executable;
	unsigned long close_on_exec;
	struct file *filp[NR_OPEN];
/* ldt for this task 0 - zero 1 - cs 2 - ds&ss */
	struct desc_struct ldt[3];
/* tss for this task */
	struct tss_struct tss;
};

/*
* INIT_TASK ?????????1 ???????????????????????????
* ???Base = 0???¦Ã?limit = 0x9ffff??=640kB????
*/
// ???????????????1 ????????????
#define INIT_TASK \
{\
/* state etc */0,15,15, \
/* signals */0, {{0},}, 0,\
/* ec,brk... */0, 0, 0, 0, 0, 0,\
/* pid etc.. */ 0, -1, 0, 0, 0, \
/* uid etc */ 0, 0, 0, 0, 0, 0, \
/* alarm */ 0, 0, 0, 0, 0, 0, \
/* math */ 0, \
/* fs info */ -1, 0022, NULL, NULL, NULL, 0, \
/* filp */ {NULL,}, \
/* ldt[3]*/	{{0, 0}, \
	{0x9f, 0xc0fa00}, /* ????640K?????0x0??G=1??D=1??DPL=3??P=1 TYPE=0x0a*/  \
	{ 0x9f, 0xc0f200},}, /* ?????640K?????0x0??G=1??D=1??DPL=3??P=1 TYPE=0x02*/   \
/*tss*/ {0, PAGE_SIZE + (long) (&init_task), 0x10, 0, 0, 0, 0, (long) &pg_dir,\
    0, 0, 0, 0, 0, 0, 0, 0, \
    0, 0, 0x17, 0x17, 0x17, 0x17, 0x17, 0x17, _LDT (0), 0x80000000, {0} },\
}

extern struct task_struct *task[NR_TASKS];	// ???????î•
extern struct task_struct *last_task_used_math;	// ???????¨´?§¿????????????
extern struct task_struct *current;	// ????????????????
extern long volatile jiffies;	// ?????????????¦Ä?????10ms/?¦Ä??
extern long startup_time;	// ?????????1970:0:0:0 ??????????????

#define CURRENT_TIME (startup_time+jiffies/HZ)	// ??????????????

// ????????????????????jiffies ?¦Ä??????????????¨²???*fn()????( kernel/sched.c,272)
extern void add_timer (long jiffies, void (*fn) ());
// ?????§Ø????????( kernel/sched.c, 151 )
extern void sleep_on (struct task_struct **p);
// ???§Ø????????( kernel/sched.c, 167 )
extern void interruptible_sleep_on (struct task_struct **p);
// ???????????????( kernel/sched.c, 188 )
extern void wake_up (struct task_struct **p);

/*
* ????1 ??TSS ???????§Ö?????0-?????nul??1-?????cs??2-?????ds??3-????syscall
* 4-????????TSS0??5-?????LTD0??6-????????TSS1?????
*/
// ?????§Ö?1 ??????????(TSS)???????????????????
#define FIRST_TSS_ENTRY 4
// ?????§Ö?1 ?????????????(LDT)???????????????????
#define FIRST_LDT_ENTRY (FIRST_TSS_ENTRY+1)
// ???ÈÉ???????????§Ö?n ???????TSS ???????????????????????
#define _TSS(n) ((((unsigned long) n)<<4)+(FIRST_TSS_ENTRY<<3))
// ???ÈÉ???????????§Ö?n ???????LDT ???????????????
#define _LDT(n) ((((unsigned long) n)<<4)+(FIRST_LDT_ENTRY<<3))
// ???ÈÉ?????n ???????????????tr??
//#define ltr(n) __asm__( "ltr %%ax":: "a" (_TSS(n)))
_inline void ltr(unsigned long n)
{
	n=_TSS(n);
	_asm{
	ltr word ptr n
	}
}
// ???ÈÉ?????n ??????????????????????ldtr??
//#define lldt(n) __asm__( "lldt %%ax":: "a" (_LDT(n)))
_inline void lldt(unsigned long n)
{
	n=_LDT(n);
	_asm{
	lldt word ptr n
	}
}
// ??????????????????????????????§Ö??????????????pid ???????
// ?????n - ?????????????( kernel/traps.c, 79)??
#define str(n) _str((unsigned long)(&(n)))
_inline void _str(unsigned long n)
{ _asm{
	xor eax,eax 
	str ax /* ????????????TSS ?¦Å???§¹??? -> ax*/
	sub eax,FIRST_TSS_ENTRY*8  /* (eax - FIRST_TSS_ENTRY*8) -> eax*/
	shr eax,4 /* (eax/16)->eax = ????????*/ 
	mov ebx,n
	mov [ebx],eax
}}
/*#define str(n) \
__asm__( "str %%ax\n\t"	// ????????????TSS ?¦Å???§¹???->ax \
"subl %2,%%eax\n\t"		// (eax - FIRST_TSS_ENTRY*8)->eax \
  "shrl $4,%%eax"		// (eax/16)->eax = ????????? \
: "=a" (n):"a" (0), "i" (FIRST_TSS_ENTRY << 3))
*/
/*
* switch_to(n)???§Ý????????????nr????n????????????n ???????????
* ???????????????????????????§Ý????????????????????§µ???¨´????
* §¿??????????????Ûx¦Ë????????cr0 ?§Ö?TS ?????
*/
// ????%0 - ??TSS ???????(*&__tmp.a)?? %1 - ?????TSS ???????(*&__tmp.b)??
// dx - ??????n ????????ecx - ?????????task[n]??
// ????????????__tmp ?§µ?a ?????32 ¦Ë??????b ???TSS ???????????????§Ý????a ?
// ????????????????§Ø??????????????????¨´?§¿?????????????????????????¦Å?????
// ??????last_task_used_math ?????§Ö???¨´?§¿???????????????¦Å??????§Ò??????????
extern _inline void switch_to(int n) 
{
	unsigned short __tmp;
	__tmp = (unsigned short)_TSS(n);

	_asm {
		mov ebx, offset task
		mov eax, n
		mov ecx, [ebx+eax*4]
		cmp ecx, current/* ????n ???????????(current ==task[n]?) */ 
		je l1 /* ????????????????????*/ 
		xchg ecx,current/* current = task[n]?? */
		/*??§Ô??????????????§Ý? (????????????????)*/
		mov ax, __tmp
		mov word ptr ds:[lcs],ax
		_emit 0xea
		_emit 0		// ip
		_emit 0 
		_emit 0 
		_emit 0
lcs:	_emit 0		// cs
		_emit 0
// ???????§Ý???????????????????????
		cmp last_task_used_math,ecx /* ???????????¨´?§¿????????*/
		jne l1
		clts/* ???????????¨´?§¿????????????cr0 ??TS ?????*/
	}
l1: ;
}
/*
#define switch_to(n) {\
struct {long a,b;} __tmp; \
__asm__( "cmpl %%ecx,_current\n\t" \	
  "je 1f\n\t" \			
  "movw %%dx,%1\n\t" \		
  "xchgl %%ecx,_current\n\t" \	??
  "ljmp %0\n\t" \		??
// ???????§Ý???????????????????????
  "cmpl %%ecx,_last_task_used_math\n\t" \	
  "jne 1f\n\t" \		
  "clts\n" \			
  "1:"::"m" (*&__tmp.a), "m" (*&__tmp.b),
  "d" (_TSS (n)), "c" ((long) task[n]));
}*/

// ??????????????????????????¦Ê¦Å??????!!??
#define PAGE_ALIGN(n) (((n)+0xfff)&0xfffff000)

// ????¦Ë????addr ?????????§Ö??????????(???????base)???¦Ì??§Ò????????
// %0 - ???addr ???2??%1 - ???addr ???4??%2 - ???addr ???7??edx - ?????base??
extern _inline 
void _set_base(unsigned short *addr,unsigned long base) 
{ 
/*	addr[1] = base;
	((char*)addr)[4] = base >> 16;
	((char*)addr)[7] = base >> 8;*/
	_asm mov ebx,addr
	_asm mov edx,base 
	_asm mov word ptr [ebx+2],dx // ???base ??16 ¦Ë(¦Ë15-0)->[addr+2]??
	_asm ror edx,16 // edx ?§Ý????16 ¦Ë(¦Ë31-16) -> dx?? 
	_asm mov byte ptr [ebx+4],dl // ?????16 ¦Ë?§Ö??8 ¦Ë(¦Ë23-16)->[addr+4]??
	_asm mov byte ptr [ebx+7],dh // ?????16 ¦Ë?§Ö??8 ¦Ë(¦Ë31-24)->[addr+7]??
}
/*
__asm__( "movw %%dx,%0\n\t" \	
"rorl $16,%%edx\n\t" \		
  "movb %%dl,%1\n\t" \		
  "movb %%dh,%2" \		
::"m" (*((addr) + 2)), "m" (*((addr) + 4)), "m" (*((addr) + 7)), "d" (base):"dx")
*/
// ????¦Ë????addr ?????????§Ö????????(?¦Ã???limit)??
// %0 - ???addr??%1 - ???addr ???6 ????edx - ?¦Ã??limit??
extern _inline void _set_limit(unsigned short *addr,unsigned long limit) 
{
/*	addr[0] = limit;
	((char*)addr)[6] = ((char*)addr)[6] & 0xf0 + (limit >> 16) & 0x0f;*/
	_asm mov ebx,addr
	_asm mov edx,limit 
	_asm mov word ptr [ebx],dx // ?¦Ã?limit ??16 ¦Ë(¦Ë15-0)->[addr]??
	_asm ror edx,16 // edx ?§Ö?¦Ã???4 ¦Ë(¦Ë19-16)->dl??
	_asm mov dh,byte ptr [ebx+6] // ??[addr+6]???->dh?????§Ú?4 ¦Ë??§»?????
	_asm and dh,0f0h // ??dh ???4 ¦Ë(?????¦Ã???¦Ë19-16)??
	_asm or dl,dh // ?????4 ¦Ë?????¦Ã????4 ¦Ë(¦Ë19-16)???1 ????
	_asm mov byte ptr [ebx+6],dl // ?????[addr+6]????
}
/*
#define _set_limit(addr,limit) \
__asm__( "movw %%dx,%0\n\t" \	
  "rorl $16,%%edx\n\t" \	
  "movb %1,%%dh\n\t" \		
  "andb $0xf0,%%dh\n\t" \	
  "orb %%dh,%%dl\n\t" \		
  "movb %%dl,%1" \		
::"m" (*(addr)), "m" (*((addr) + 6)), "d" (limit):"dx")
*/
// ????????????????ldt ??????????????¦±?
#define set_base(ldt,base) \
_set_base( ((unsigned short *)&(ldt)), (unsigned long)(base) )
// ????????????????ldt ????????¦Ã???¦±?
#define set_limit(ldt,limit) \
_set_limit( ((unsigned short *)&(ldt)), (unsigned long)((limit)-1)>>12 )

// ??????????????ldt ????????????§Ö???????
#define get_base(ldt) _get_base( ((void *)&(ldt)) )
// ????addr ????????????¦Ë????????????_set_base()????????
// edx - ???????(__base)??%1 - ???addr ???2??%2 - ???addr ???4??%3 - addr ???7??
extern _inline unsigned long _get_base(void *addr) 
{
//	unsigned long __base; 
	_asm { 
		_asm mov ebx,addr
		_asm mov ah,byte ptr [ebx+7] // ?[addr+7]???????16 ¦Ë???8 ¦Ë(¦Ë31-24)->dh??
		_asm mov al,byte ptr [ebx+4] // ?[addr+4]???????16 ¦Ë???8 ¦Ë(¦Ë23-16)->dl??
		_asm shl eax,16 // ???????16 ¦Ë???edx ?§Ú?16 ¦Ë????
		_asm mov ax,word ptr [ebx+2] // ?[addr+2]???????16 ¦Ë(¦Ë15-0)->dx??
//		_asm mov __base,eax 
		} 
//	return __base; 
}
/*
unsigned long __base; \
__asm__( "movb %3,%%dh\n\t" \	
  "movb %2,%%dl\n\t" \		
  "shll $16,%%edx\n\t" \	
  "movw %1,%%dx" \		
:"=d" (__base) \		// ???edx ?§Ü???32 ¦Ë??¦Ë??????
:"m" (*((addr) + 2)), "m" (*((addr) + 4)), "m" (*((addr) + 7))); \
__base; \
})
*/

// ???????segment ??¦Ã????
// %0 - ???¦Ã??(?????)??%1 - ??????segment??
extern _inline unsigned long get_limit(unsigned long segment) { 
//	unsigned long __limit; 
	_asm { 
		mov eax,segment 
		lsl eax,eax 
//		mov __limit,eax 
	} 
//	return __limit; 
}
/*
unsigned long __limit; \
__asm__( "lsll %1,%0\n\tincl %0": "=r" (__limit): "r" (segment)); \
__limit;})
*/
#endif
